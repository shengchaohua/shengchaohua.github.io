const e=JSON.parse('{"key":"v-364d9786","path":"/computer-basic/da/algorithm/dynamic-programming.html","title":"动态规划","lang":"zh-CN","frontmatter":{"title":"动态规划","order":3,"category":"算法","tag":["动态规划","Leetcode"],"description":" 经典编程题 背包问题 背包九讲——全篇详细理解与代码实现 给定一个容量为 capacity 的背包和 N 种物品： 物品的重量（或体积）用一个长度为 N 的数组 weight 表示，第 i 种物品的重量和价值分别为 weights[i]。 物品的价值用一个长度为 N 的数组 values 表示，第 i 种物品的价值为 values[i]。 请问，在不...","head":[["meta",{"property":"og:url","content":"https://shengchaohua.cn/computer-basic/da/algorithm/dynamic-programming.html"}],["meta",{"property":"og:site_name","content":"绳子的学习笔记"}],["meta",{"property":"og:title","content":"动态规划"}],["meta",{"property":"og:description","content":" 经典编程题 背包问题 背包九讲——全篇详细理解与代码实现 给定一个容量为 capacity 的背包和 N 种物品： 物品的重量（或体积）用一个长度为 N 的数组 weight 表示，第 i 种物品的重量和价值分别为 weights[i]。 物品的价值用一个长度为 N 的数组 values 表示，第 i 种物品的价值为 values[i]。 请问，在不..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/shengchaohua/my-images/main/images/202311251618036.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-02T12:40:28.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"动态规划"}],["meta",{"property":"article:author","content":"绳子"}],["meta",{"property":"article:tag","content":"动态规划"}],["meta",{"property":"article:tag","content":"Leetcode"}],["meta",{"property":"article:modified_time","content":"2024-03-02T12:40:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"动态规划\\",\\"image\\":[\\"https://raw.githubusercontent.com/shengchaohua/my-images/main/images/202311251618036.png\\",\\"https://raw.githubusercontent.com/shengchaohua/my-images/main/images/202311251618563.png\\",\\"https://raw.githubusercontent.com/shengchaohua/my-images/main/images/202311251618048.png\\",\\"https://mmbiz.qpic.cn/mmbiz_png/oD5ruyVxxVGRJ4bSda4dThHBeSbNib3NpjEWPqmIgHluopXk7FBTby4zWaLlggUwIicicCaPHz4ISHSrWGZuibUhxQ/640?wx_fmt=png\\\\\\\\&wxfrom=5\\\\\\\\&wx_lazy=1\\\\\\\\&wx_co=1\\"],\\"dateModified\\":\\"2024-03-02T12:40:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"绳子\\",\\"url\\":\\"https://shengchaohua.cn\\"}]}"]]},"headers":[{"level":2,"title":"经典编程题","slug":"经典编程题","link":"#经典编程题","children":[{"level":3,"title":"背包问题","slug":"背包问题","link":"#背包问题","children":[]}]},{"level":2,"title":"Leetcode 编程题","slug":"leetcode-编程题","link":"#leetcode-编程题","children":[{"level":3,"title":"1143. 最长公共子序列","slug":"_1143-最长公共子序列","link":"#_1143-最长公共子序列","children":[]},{"level":3,"title":"5. 最长回文子串","slug":"_5-最长回文子串","link":"#_5-最长回文子串","children":[]},{"level":3,"title":"516. 最长回文子序列","slug":"_516-最长回文子序列","link":"#_516-最长回文子序列","children":[]},{"level":3,"title":"300. 最长上升子序列","slug":"_300-最长上升子序列","link":"#_300-最长上升子序列","children":[]},{"level":3,"title":"413. 等差数列划分","slug":"_413-等差数列划分","link":"#_413-等差数列划分","children":[]},{"level":3,"title":"446. 等差数列划分 II - 子序列","slug":"_446-等差数列划分-ii-子序列","link":"#_446-等差数列划分-ii-子序列","children":[]},{"level":3,"title":"1218. 最长定差子序列","slug":"_1218-最长定差子序列","link":"#_1218-最长定差子序列","children":[]},{"level":3,"title":"115. 不同的子序列","slug":"_115-不同的子序列","link":"#_115-不同的子序列","children":[]},{"level":3,"title":"332. 零钱兑换","slug":"_332-零钱兑换","link":"#_332-零钱兑换","children":[]},{"level":3,"title":"518. 零钱兑换 II","slug":"_518-零钱兑换-ii","link":"#_518-零钱兑换-ii","children":[]},{"level":3,"title":"198. 打家劫舍","slug":"_198-打家劫舍","link":"#_198-打家劫舍","children":[]},{"level":3,"title":"213. 打家劫舍II","slug":"_213-打家劫舍ii","link":"#_213-打家劫舍ii","children":[]},{"level":3,"title":"337. 打家劫舍III","slug":"_337-打家劫舍iii","link":"#_337-打家劫舍iii","children":[]},{"level":3,"title":"121. 买卖股票的最佳时机","slug":"_121-买卖股票的最佳时机","link":"#_121-买卖股票的最佳时机","children":[]},{"level":3,"title":"122. 买卖股票的最佳时机 II","slug":"_122-买卖股票的最佳时机-ii","link":"#_122-买卖股票的最佳时机-ii","children":[]},{"level":3,"title":"70. 爬楼梯","slug":"_70-爬楼梯","link":"#_70-爬楼梯","children":[]},{"level":3,"title":"746. 爬楼梯II - 使用最小花费爬楼梯","slug":"_746-爬楼梯ii-使用最小花费爬楼梯","link":"#_746-爬楼梯ii-使用最小花费爬楼梯","children":[]},{"level":3,"title":"139. 单词拆分","slug":"_139-单词拆分","link":"#_139-单词拆分","children":[]},{"level":3,"title":"140. 单词拆分II","slug":"_140-单词拆分ii","link":"#_140-单词拆分ii","children":[]},{"level":3,"title":"42. 接雨水","slug":"_42-接雨水","link":"#_42-接雨水","children":[]},{"level":3,"title":"64. 最小路径和","slug":"_64-最小路径和","link":"#_64-最小路径和","children":[]},{"level":3,"title":"329. 矩阵中的最长递增路径","slug":"_329-矩阵中的最长递增路径","link":"#_329-矩阵中的最长递增路径","children":[]},{"level":3,"title":"562. 矩阵中最长的连续1线段","slug":"_562-矩阵中最长的连续1线段","link":"#_562-矩阵中最长的连续1线段","children":[]},{"level":3,"title":"221. 最大正方形","slug":"_221-最大正方形","link":"#_221-最大正方形","children":[]},{"level":3,"title":"1277. 统计全为 1 的正方形子矩阵","slug":"_1277-统计全为-1-的正方形子矩阵","link":"#_1277-统计全为-1-的正方形子矩阵","children":[]},{"level":3,"title":"85. 最大矩形","slug":"_85-最大矩形","link":"#_85-最大矩形","children":[]},{"level":3,"title":"72. 编辑距离","slug":"_72-编辑距离","link":"#_72-编辑距离","children":[]},{"level":3,"title":"91. 解码方法","slug":"_91-解码方法","link":"#_91-解码方法","children":[]},{"level":3,"title":"LCR 46. 把数字翻译成字符串","slug":"lcr-46-把数字翻译成字符串","link":"#lcr-46-把数字翻译成字符串","children":[]},{"level":3,"title":"357. 计算各个位数不同的数字个数","slug":"_357-计算各个位数不同的数字个数","link":"#_357-计算各个位数不同的数字个数","children":[]},{"level":3,"title":"96. 不同的二叉搜索树","slug":"_96-不同的二叉搜索树","link":"#_96-不同的二叉搜索树","children":[]}]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[{"level":3,"title":"圆环回原点","slug":"圆环回原点","link":"#圆环回原点","children":[]}]}],"git":{"createdTime":1709370222000,"updatedTime":1709383228000,"contributors":[{"name":"shengchaohua","email":"shengchaohua1995@gmail.com","commits":3}]},"readingTime":{"minutes":37.84,"words":11352},"filePathRelative":"computer-basic/da/algorithm/dynamic-programming.md","localizedDate":"2024年3月2日","excerpt":"","autoDesc":true}');export{e as data};
