const e=JSON.parse('{"key":"v-025ba4e3","path":"/computer-basic/da/algorithm/sort.html","title":"排序","lang":"zh-CN","frontmatter":{"title":"排序","order":1,"category":"算法","tag":["排序","Leetcode"],"description":" 基础 冒泡排序 插入排序 选择排序 归并排序 1）返回数组法。 代码如下： 2）原地操作法。函数参数稍微复杂。 快速排序 介绍三种写法的快速排序。三种写法的quick_sort函数相同，在此给出。 推荐使用填坑法，比较直观，便于记忆。 1）填坑法。 使用第一个元素当作轴元素。注意先从右往左比较，大于等于号；再从左往右比较，小于号。 2）交换法。 使用...","head":[["meta",{"property":"og:url","content":"https://shengchaohua.cn/computer-basic/da/algorithm/sort.html"}],["meta",{"property":"og:site_name","content":"绳子的学习笔记"}],["meta",{"property":"og:title","content":"排序"}],["meta",{"property":"og:description","content":" 基础 冒泡排序 插入排序 选择排序 归并排序 1）返回数组法。 代码如下： 2）原地操作法。函数参数稍微复杂。 快速排序 介绍三种写法的快速排序。三种写法的quick_sort函数相同，在此给出。 推荐使用填坑法，比较直观，便于记忆。 1）填坑法。 使用第一个元素当作轴元素。注意先从右往左比较，大于等于号；再从左往右比较，小于号。 2）交换法。 使用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-02T12:40:28.000Z"}],["meta",{"property":"article:author","content":"绳子"}],["meta",{"property":"article:tag","content":"排序"}],["meta",{"property":"article:tag","content":"Leetcode"}],["meta",{"property":"article:modified_time","content":"2024-03-02T12:40:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"排序\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-02T12:40:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"绳子\\",\\"url\\":\\"https://shengchaohua.cn\\"}]}"]]},"headers":[{"level":2,"title":"基础","slug":"基础","link":"#基础","children":[{"level":3,"title":"冒泡排序","slug":"冒泡排序","link":"#冒泡排序","children":[]},{"level":3,"title":"插入排序","slug":"插入排序","link":"#插入排序","children":[]},{"level":3,"title":"选择排序","slug":"选择排序","link":"#选择排序","children":[]},{"level":3,"title":"归并排序","slug":"归并排序","link":"#归并排序","children":[]},{"level":3,"title":"快速排序","slug":"快速排序","link":"#快速排序","children":[]},{"level":3,"title":"堆排序","slug":"堆排序","link":"#堆排序","children":[]},{"level":3,"title":"线性时间排序","slug":"线性时间排序","link":"#线性时间排序","children":[]}]},{"level":2,"title":"Leetcode 编程题","slug":"leetcode-编程题","link":"#leetcode-编程题","children":[{"level":3,"title":"LCR 164. 把数组排成最小的数","slug":"lcr-164-把数组排成最小的数","link":"#lcr-164-把数组排成最小的数","children":[]},{"level":3,"title":"56. 合并区间","slug":"_56-合并区间","link":"#_56-合并区间","children":[]},{"level":3,"title":"406. 根据身高重建队列","slug":"_406-根据身高重建队列","link":"#_406-根据身高重建队列","children":[]},{"level":3,"title":"LCR 170. 交易逆序对的总数","slug":"lcr-170-交易逆序对的总数","link":"#lcr-170-交易逆序对的总数","children":[]},{"level":3,"title":"493. 翻转对","slug":"_493-翻转对","link":"#_493-翻转对","children":[]},{"level":3,"title":"315. 计算右侧小于当前元素的个数","slug":"_315-计算右侧小于当前元素的个数","link":"#_315-计算右侧小于当前元素的个数","children":[]},{"level":3,"title":"327. 区间和的个数","slug":"_327-区间和的个数","link":"#_327-区间和的个数","children":[]}]}],"git":{"createdTime":1709370222000,"updatedTime":1709383228000,"contributors":[{"name":"shengchaohua","email":"shengchaohua1995@gmail.com","commits":3}]},"readingTime":{"minutes":8.13,"words":2439},"filePathRelative":"computer-basic/da/algorithm/sort.md","localizedDate":"2024年3月2日","excerpt":"","autoDesc":true}');export{e as data};
