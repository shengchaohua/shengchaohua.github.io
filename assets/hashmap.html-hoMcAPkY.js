import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as e,o as t,c as o,d as p,a as n,e as c,b as l,f as i}from"./app-qKT_MvSj.js";const r={},u=n("h2",{id:"leetcode-编程题",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#leetcode-编程题"},[n("span",null,"Leetcode 编程题")])],-1),d=n("h3",{id:"_128-最长连续序列",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_128-最长连续序列"},[n("span",null,"128. 最长连续序列")])],-1),m={href:"https://leetcode-cn.com/problems/longest-consecutive-sequence/",title:"128. 最长连续序列",target:"_blank",rel:"noopener noreferrer"},k=i(`<p>一、题目</p><p>给定一个未排序的整数数组，找出最长连续序列的长度。</p><p>要求算法的时间复杂度为 O(n)。</p><p>示例 1：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>输入：nums = [100,4,200,1,3,2]
输出：4
解释：最长数字连续序列是 [1, 2, 3, 4]。它的长度为 4。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例 2：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>输入：nums = [0,3,7,2,5,8,4,6,0,1]
输出：9
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>二、解析</p><p>使用哈希表！</p><p>代码如下：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">longestConsecutive</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>
        res <span class="token operator">=</span> <span class="token number">0</span>
        num_set <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>

        <span class="token keyword">for</span> num <span class="token keyword">in</span> nums<span class="token punctuation">:</span>
            <span class="token keyword">if</span> num <span class="token operator">-</span> <span class="token number">1</span> <span class="token keyword">not</span> <span class="token keyword">in</span> num_set<span class="token punctuation">:</span>
                cur_num <span class="token operator">=</span> num
                cur_count <span class="token operator">=</span> <span class="token number">1</span>
                <span class="token keyword">while</span> cur_num <span class="token operator">+</span> <span class="token number">1</span> <span class="token keyword">in</span> num_set<span class="token punctuation">:</span>
                    cur_num <span class="token operator">+=</span> <span class="token number">1</span>
                    cur_count <span class="token operator">+=</span> <span class="token number">1</span>
                res <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> cur_count<span class="token punctuation">)</span>
        <span class="token keyword">return</span> res
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function v(b,_){const s=e("ExternalLinkIcon");return t(),o("div",null,[p(" more "),u,d,n("blockquote",null,[n("p",null,[n("a",m,[c("128. 最长连续序列"),l(s)])])]),k])}const f=a(r,[["render",v],["__file","hashmap.html.vue"]]);export{f as default};
