import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as a,o as c,c as n,d as r,a as e,e as s,b as d,f as l}from"./app-qKT_MvSj.js";const p={},h=e("h2",{id:"leetcode-编程题",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#leetcode-编程题"},[e("span",null,"Leetcode 编程题")])],-1),_=e("h3",{id:"_847-访问所有节点的最短路径",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_847-访问所有节点的最短路径"},[e("span",null,"847. 访问所有节点的最短路径")])],-1),i={href:"https://leetcode-cn.com/problems/shortest-path-visiting-all-nodes/",title:"847. 访问所有节点的最短路径",target:"_blank",rel:"noopener noreferrer"},m=l("<p>一、题目</p><p>给出graph为有 N 个节点（编号为0, 1, 2, ..., N-1）的无向连通图。</p><p>graph.length = N，且只有节点<code>i</code>和<code>j</code>连通时，<code>j != i</code>在列表<code>graph[i]</code>中恰好出现一次。</p><p>返回能够访问所有节点的最短路径的长度。你可以在任一节点开始和停止，也可以多次重访节点，并且可以重用边。</p><p>二、解析</p><p>TODO</p>",6);function f(u,g){const o=a("ExternalLinkIcon");return c(),n("div",null,[r(" more "),h,_,e("blockquote",null,[e("p",null,[e("a",i,[s("847. 访问所有节点的最短路径"),d(o)])])]),m])}const b=t(p,[["render",f],["__file","graph.html.vue"]]);export{b as default};
